# -*- coding: utf-8 -*-
"""Heart Disease Prediction using LogisticRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AyoFNhucjfi7kfrI8Hppxay7mvwO41XF
"""



"""Importing the dependencies"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data collection and procesing"""

#loading the csv data as dataframe

data = pd.read_csv('/HeartDisease_encoded.csv')

#description of the dataset
data.info()

#checking null values
data.isnull().sum()

data_1 = data.dropna()

data_1.isnull().sum()

#statistical measures of the data
data_1.describe()

#checking the distribution of target variable
data_1['num'].value_counts()

"""Feature engineering"""

# m = {'Male' : 1, 'Female' : 0}
# data_1['sex'] = data_1['sex'].str[0].str.lower().map(m)

X = data_1.drop(columns = 'num',axis = 1)
Y = data_1['num']

X.info()

#printing target column separately
print(Y)

"""Spliting the data into test set and train set"""

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.2, stratify = Y,random_state = 2)

print(X.shape,X_train.shape,X_test.shape)

"""Model Training"""

model = LogisticRegression()

#model traing
model.fit(X_train,Y_train)

"""Model evaluation"""

#accuracy score
X_train_prediction = model.predict(X_train)
training_data_score = accuracy_score(X_train_prediction,Y_train)
print(training_data_score)

#accuracy score
X_test_prediction = model.predict(X_test)
testing_data_score = accuracy_score(X_test_prediction,Y_test)
print(testing_data_score)

"""Building a Predictive System"""

input_data = (2,29,1,2,120,243,0,0,160,0,0)

# change the input data to a numpy array
input_data_as_numpy_array= np.asarray(input_data)

# reshape the numpy array as we are predicting for only on instance
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]== 0):
  print('The Person does not have a Heart Disease')
else:
  print('The Person has Heart Disease')